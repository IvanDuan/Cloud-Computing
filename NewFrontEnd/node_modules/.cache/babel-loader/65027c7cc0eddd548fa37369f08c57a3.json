{"ast":null,"code":"var util = require('./util');\n\nvar regionConfig = require('./region_config_data.json');\n\nfunction generateRegionPrefix(region) {\n  if (!region) return null;\n  var parts = region.split('-');\n  if (parts.length < 3) return null;\n  return parts.slice(0, parts.length - 2).join('-') + '-*';\n}\n\nfunction derivedKeys(service) {\n  var region = service.config.region;\n  var regionPrefix = generateRegionPrefix(region);\n  var endpointPrefix = service.api.endpointPrefix;\n  return [[region, endpointPrefix], [regionPrefix, endpointPrefix], [region, '*'], [regionPrefix, '*'], ['*', endpointPrefix], ['*', '*']].map(function (item) {\n    return item[0] && item[1] ? item.join('/') : null;\n  });\n}\n\nfunction applyConfig(service, config) {\n  util.each(config, function (key, value) {\n    if (key === 'globalEndpoint') return;\n\n    if (service.config[key] === undefined || service.config[key] === null) {\n      service.config[key] = value;\n    }\n  });\n}\n\nfunction configureEndpoint(service) {\n  var keys = derivedKeys(service);\n  var useFipsEndpoint = service.config.useFipsEndpoint;\n  var useDualstackEndpoint = service.config.useDualstackEndpoint;\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!key) continue;\n    var rules = useFipsEndpoint ? useDualstackEndpoint ? regionConfig.dualstackFipsRules : regionConfig.fipsRules : useDualstackEndpoint ? regionConfig.dualstackRules : regionConfig.rules;\n\n    if (Object.prototype.hasOwnProperty.call(rules, key)) {\n      var config = rules[key];\n\n      if (typeof config === 'string') {\n        config = regionConfig.patterns[config];\n      } // set global endpoint\n\n\n      service.isGlobalEndpoint = !!config.globalEndpoint;\n\n      if (config.signingRegion) {\n        service.signingRegion = config.signingRegion;\n      } // signature version\n\n\n      if (!config.signatureVersion) {\n        // Note: config is a global object and should not be mutated here.\n        // However, we are retaining this line for backwards compatibility.\n        // The non-v4 signatureVersion will be set in a copied object below.\n        config.signatureVersion = 'v4';\n      }\n\n      var useBearer = (service.api && service.api.signatureVersion) === 'bearer'; // merge config\n\n      applyConfig(service, Object.assign({}, config, {\n        signatureVersion: useBearer ? 'bearer' : config.signatureVersion\n      }));\n      return;\n    }\n  }\n}\n\nfunction getEndpointSuffix(region) {\n  var regionRegexes = {\n    '^(us|eu|ap|sa|ca|me)\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^cn\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com.cn',\n    '^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$': 'c2s.ic.gov',\n    '^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$': 'sc2s.sgov.gov'\n  };\n  var defaultSuffix = 'amazonaws.com';\n  var regexes = Object.keys(regionRegexes);\n\n  for (var i = 0; i < regexes.length; i++) {\n    var regionPattern = RegExp(regexes[i]);\n    var dnsSuffix = regionRegexes[regexes[i]];\n    if (regionPattern.test(region)) return dnsSuffix;\n  }\n\n  return defaultSuffix;\n}\n/**\n * @api private\n */\n\n\nmodule.exports = {\n  configureEndpoint: configureEndpoint,\n  getEndpointSuffix: getEndpointSuffix\n};","map":{"version":3,"sources":["C:/Users/tanma/Desktop/AUT/INFS803/Project/Cloud-Computing/NewFrontEnd/node_modules/aws-sdk/lib/region_config.js"],"names":["util","require","regionConfig","generateRegionPrefix","region","parts","split","length","slice","join","derivedKeys","service","config","regionPrefix","endpointPrefix","api","map","item","applyConfig","each","key","value","undefined","configureEndpoint","keys","useFipsEndpoint","useDualstackEndpoint","i","rules","dualstackFipsRules","fipsRules","dualstackRules","Object","prototype","hasOwnProperty","call","patterns","isGlobalEndpoint","globalEndpoint","signingRegion","signatureVersion","useBearer","assign","getEndpointSuffix","regionRegexes","defaultSuffix","regexes","regionPattern","RegExp","dnsSuffix","test","module","exports"],"mappings":"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","sourcesContent":["var util = require('./util');\nvar regionConfig = require('./region_config_data.json');\n\nfunction generateRegionPrefix(region) {\n  if (!region) return null;\n  var parts = region.split('-');\n  if (parts.length < 3) return null;\n  return parts.slice(0, parts.length - 2).join('-') + '-*';\n}\n\nfunction derivedKeys(service) {\n  var region = service.config.region;\n  var regionPrefix = generateRegionPrefix(region);\n  var endpointPrefix = service.api.endpointPrefix;\n\n  return [\n    [region, endpointPrefix],\n    [regionPrefix, endpointPrefix],\n    [region, '*'],\n    [regionPrefix, '*'],\n    ['*', endpointPrefix],\n    ['*', '*']\n  ].map(function(item) {\n    return item[0] && item[1] ? item.join('/') : null;\n  });\n}\n\nfunction applyConfig(service, config) {\n  util.each(config, function(key, value) {\n    if (key === 'globalEndpoint') return;\n    if (service.config[key] === undefined || service.config[key] === null) {\n      service.config[key] = value;\n    }\n  });\n}\n\nfunction configureEndpoint(service) {\n  var keys = derivedKeys(service);\n  var useFipsEndpoint = service.config.useFipsEndpoint;\n  var useDualstackEndpoint = service.config.useDualstackEndpoint;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!key) continue;\n\n    var rules = useFipsEndpoint\n      ? useDualstackEndpoint\n        ? regionConfig.dualstackFipsRules\n        : regionConfig.fipsRules\n      : useDualstackEndpoint\n      ? regionConfig.dualstackRules\n      : regionConfig.rules;\n\n    if (Object.prototype.hasOwnProperty.call(rules, key)) {\n      var config = rules[key];\n      if (typeof config === 'string') {\n        config = regionConfig.patterns[config];\n      }\n\n      // set global endpoint\n      service.isGlobalEndpoint = !!config.globalEndpoint;\n      if (config.signingRegion) {\n        service.signingRegion = config.signingRegion;\n      }\n\n      // signature version\n      if (!config.signatureVersion) {\n        // Note: config is a global object and should not be mutated here.\n        // However, we are retaining this line for backwards compatibility.\n        // The non-v4 signatureVersion will be set in a copied object below.\n        config.signatureVersion = 'v4';\n      }\n\n      var useBearer = (service.api && service.api.signatureVersion) === 'bearer';\n\n      // merge config\n      applyConfig(service, Object.assign(\n        {},\n        config,\n        { signatureVersion: useBearer ? 'bearer' : config.signatureVersion }\n      ));\n      return;\n    }\n  }\n}\n\nfunction getEndpointSuffix(region) {\n  var regionRegexes = {\n    '^(us|eu|ap|sa|ca|me)\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^cn\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com.cn',\n    '^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$': 'c2s.ic.gov',\n    '^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$': 'sc2s.sgov.gov'\n  };\n  var defaultSuffix = 'amazonaws.com';\n  var regexes = Object.keys(regionRegexes);\n  for (var i = 0; i < regexes.length; i++) {\n    var regionPattern = RegExp(regexes[i]);\n    var dnsSuffix = regionRegexes[regexes[i]];\n    if (regionPattern.test(region)) return dnsSuffix;\n  }\n  return defaultSuffix;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  configureEndpoint: configureEndpoint,\n  getEndpointSuffix: getEndpointSuffix,\n};\n"]},"metadata":{},"sourceType":"script"}