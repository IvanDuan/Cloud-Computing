{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanma\\\\Desktop\\\\AUT\\\\INFS803\\\\Project\\\\Cloud-Computing\\\\NewFrontEnd\\\\src\\\\pages\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport Add from '../img/icon-registration.png';\nimport moment from 'moment';\nimport { DatePicker, message } from 'antd';\nimport { useNavigate } from \"react-router-dom\";\nimport * as actions from '../store/users/index';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [userName, setUserName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('9x1923921ajsdkw');\n  const [birthday, setBirthday] = useState('');\n  const [invalidUserName, setInvalidUserName] = useState(false);\n  const [invalidEmail, setInvalidEmail] = useState(true);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileType, setFileType] = useState(\".png\");\n  const {\n    load,\n    usrs\n  } = useSelector(_ref => {\n    let {\n      users\n    } = _ref;\n    return {\n      load: users.loading,\n      usrs: users.users\n    };\n  }, shallowEqual);\n  const dispatcher = useDispatch();\n  const navigate = useNavigate();\n\n  const userNameCheck = () => {\n    for (const key in usrs) {\n      if (userName === usrs[key].username) {\n        message.error(\"Username already taken!\");\n      }\n    }\n  };\n\n  const emailCheck = () => {\n    for (const key in usrs) {\n      if (email === usrs[key].email) {\n        message.error(\"Email already in use!\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    userNameCheck();\n    emailCheck();\n  }, [userName, email]);\n\n  const onChange = (date, dateString) => {\n    setBirthday(dateString);\n  };\n\n  const antIcon = /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n    style: {\n      fontSize: 24\n    },\n    spin: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 19\n  }, this);\n\n  const selectFile = data => {\n    if (data.type === 'image/png') {\n      setFileType('.png');\n    } else if (data.type === 'image/jpeg') {\n      setFileType('.jpg');\n    }\n\n    const blob = data.slice(0, data.size, data.type);\n    const newFile = new File([blob], userName + fileType, {\n      type: fileType\n    });\n    console.log(newFile);\n    setSelectedFile(newFile);\n  };\n\n  const userNameChange = data => {};\n\n  const handleSubmit = async data => {\n    data.preventDefault();\n    const toSend = {\n      username: userName,\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      password: password,\n      birthday: birthday\n    };\n\n    try {\n      await dispatcher(actions.createUser(toSend));\n      navigate(\"/\");\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Spin, {\n        indicator: antIcon,\n        spinning: load\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \" CC12 Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"userName\",\n          name: \"userName\",\n          type: \"text\",\n          placeholder: \"User Name\",\n          onChange: e => {\n            userNameChange(e.target.value);\n            userNameCheck();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"firstName\",\n          type: \"text\",\n          placeholder: \"First Name\",\n          onChange: e => {\n            setFirstName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"lastName\",\n          type: \"text\",\n          placeholder: \"Last Name\",\n          onChange: e => {\n            setLastName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: e => {\n            setEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"confirmPassword\",\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          onChange: e => {\n            setConfirmPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          name: \"birthday\",\n          placeholder: \"Birthday\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"profilePic\",\n          type: \"file\",\n          id: \"file\",\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            navigate(\"/\");\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"GdEDaQSGe3yeBdtKbPAa2RGuWOo=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/tanma/Desktop/AUT/INFS803/Project/Cloud-Computing/NewFrontEnd/src/pages/Register.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","shallowEqual","Add","moment","DatePicker","message","useNavigate","actions","LoadingOutlined","Spin","Register","userName","setUserName","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","birthday","setBirthday","invalidUserName","setInvalidUserName","invalidEmail","setInvalidEmail","selectedFile","setSelectedFile","fileType","setFileType","load","usrs","users","loading","dispatcher","navigate","userNameCheck","key","username","error","emailCheck","onChange","date","dateString","antIcon","fontSize","selectFile","data","type","blob","slice","size","newFile","File","console","log","userNameChange","handleSubmit","preventDefault","toSend","first_name","last_name","createUser","err","e","target","value","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux';\r\nimport Add from '../img/icon-registration.png';\r\nimport moment from 'moment';\r\nimport type { DatePickerProps } from 'antd';\r\nimport { DatePicker, message } from 'antd';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as actions from '../store/users/index';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { Spin } from 'antd';\r\n\r\nconst Register = () => {\r\n\r\n  const [userName, setUserName] = useState('')\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('9x1923921ajsdkw')\r\n  const [birthday, setBirthday] = useState('')\r\n  const [invalidUserName, setInvalidUserName] = useState(false)\r\n  const [invalidEmail, setInvalidEmail] = useState(true)\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileType, setFileType] = useState(\".png\")\r\n\r\n  const {load, usrs} = useSelector(({users}) => ({\r\n    load: users.loading,\r\n    usrs: users.users\r\n  }), shallowEqual);\r\n\r\n  const dispatcher = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userNameCheck = () => {\r\n    for (const key in usrs) {\r\n      if(userName === usrs[key].username){\r\n        message.error(\"Username already taken!\")\r\n      }\r\n    }\r\n  }\r\n\r\n  const emailCheck = () => {\r\n    for (const key in usrs) {\r\n      if(email === usrs[key].email) {\r\n        message.error(\"Email already in use!\")\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    userNameCheck()\r\n    emailCheck()\r\n  }, [userName, email])\r\n\r\n  const onChange: DatePickerProps['onChange'] = (date, dateString) => {\r\n    setBirthday(dateString)\r\n  };\r\n\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n  const selectFile = (data) => {\r\n    if(data.type === 'image/png') {\r\n        setFileType('.png')\r\n    } else if (data.type === 'image/jpeg'){\r\n        setFileType('.jpg')\r\n    }\r\n    const blob = data.slice(0, data.size, data.type);\r\n    const newFile = new File([blob], userName + fileType, {type: fileType});\r\n    console.log(newFile)\r\n    setSelectedFile(newFile)\r\n}\r\n\r\n  const userNameChange = (data) => {\r\n    \r\n  }\r\n\r\n  const handleSubmit = async(data) => {\r\n    data.preventDefault()\r\n\r\n    const toSend = {\r\n      username: userName,\r\n      first_name: firstName,\r\n      last_name: lastName,\r\n      email: email,\r\n      password: password,\r\n      birthday: birthday,\r\n\r\n    }\r\n    try {\r\n      await dispatcher(actions.createUser(toSend))\r\n      navigate(\"/\")\r\n    } catch (err) {\r\n      console.error(err.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='formContainer'>\r\n      <div className='formWrapper'>\r\n      <Spin indicator={antIcon} spinning={load}/>\r\n        <span className=\"logo\"> CC12 Chat</span>\r\n        <span className=\"title\">Register</span>\r\n        <form onSubmit={handleSubmit}>\r\n          <input id=\"userName\" name=\"userName\" type=\"text\" placeholder='User Name' onChange={(e) => \r\n            { userNameChange(e.target.value)\r\n            userNameCheck() }} />\r\n          <input name=\"firstName\" type=\"text\" placeholder='First Name' onChange={(e) => { setFirstName(e.target.value) }} />\r\n          <input name=\"lastName\" type=\"text\" placeholder='Last Name' onChange={(e) => { setLastName(e.target.value) }}/>\r\n          <input name=\"email\" type=\"email\" placeholder='Email' onChange={(e) => { setEmail(e.target.value) }}/>\r\n          <input name=\"password\" type=\"password\" placeholder='Password' onChange={(e) => { setPassword(e.target.value) }}/>\r\n          <input name=\"confirmPassword\" type=\"password\" placeholder='Confirm Password' onChange={(e) => { setConfirmPassword(e.target.value) }}/>\r\n          <DatePicker name=\"birthday\" placeholder=\"Birthday\" onChange={onChange} />\r\n          <input name=\"profilePic\" type=\"file\" id='file' style={{ display: \"none\" }} />\r\n          <label htmlFor=\"file\">\r\n          </label>\r\n          <button>Register</button>\r\n        </form>\r\n        <p>Already have an account? <button onClick = {() => {navigate(\"/\")}}>Login</button></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}