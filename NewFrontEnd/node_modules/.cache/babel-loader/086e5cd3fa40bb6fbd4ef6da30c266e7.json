{"ast":null,"code":"import * as actionTypes from '../actionTypes';\nimport { updateObject } from '../../utility';\nconst initialState = {\n  users: [],\n  user: {},\n  loading: false\n};\n\nconst fetchUsersStart = (state, action) => updateObject(state, {\n  loading: true\n});\n\nconst fetchUsersSuccess = (state, action) => updateObject(state, {\n  users: action.users,\n  loading: false\n});\n\nconst newUserStart = (state, action) => updateObject(state, {\n  loading: true\n});\n\nconst newUserSuccess = (state, action) => updateObject(state, {\n  loading: false\n});\n\nconst users = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FETCH_USERS_START:\n      return fetchUsersStart(state, action);\n\n    case actionTypes.FETCH_USERS_SUCCESS:\n      return fetchUsersSuccess(state, action);\n\n    case actionTypes.NEW_USER_START:\n      return newUserStart(state, action);\n\n    case actionTypes.NEW_USER_SUCCESS:\n      return newUserSuccess(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default users;","map":{"version":3,"sources":["C:/Users/tanma/Desktop/AUT/INFS803/Project/Cloud-Computing/NewFrontEnd/src/store/users/reducer/reducer.js"],"names":["actionTypes","updateObject","initialState","users","user","loading","fetchUsersStart","state","action","fetchUsersSuccess","newUserStart","newUserSuccess","type","FETCH_USERS_START","FETCH_USERS_SUCCESS","NEW_USER_START","NEW_USER_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AACA,SAAQC,YAAR,QAA2B,eAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;;AAMA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmBP,YAAY,CAACM,KAAD,EAAQ;AAACF,EAAAA,OAAO,EAAE;AAAV,CAAR,CAAvD;;AAEA,MAAMI,iBAAiB,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmBP,YAAY,CAACM,KAAD,EAAQ;AAC7DJ,EAAAA,KAAK,EAAEK,MAAM,CAACL,KAD+C;AAE7DE,EAAAA,OAAO,EAAC;AAFqD,CAAR,CAAzD;;AAKA,MAAMK,YAAY,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmBP,YAAY,CAACM,KAAD,EAAQ;AAACF,EAAAA,OAAO,EAAE;AAAV,CAAR,CAApD;;AACA,MAAMM,cAAc,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmBP,YAAY,CAACM,KAAD,EAAQ;AAC1DF,EAAAA,OAAO,EAAE;AADiD,CAAR,CAAtD;;AAIA,MAAMF,KAAK,GAAG,YAAkC;AAAA,MAAjCI,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC5C,UAAQA,MAAM,CAACI,IAAf;AACI,SAAKZ,WAAW,CAACa,iBAAjB;AAAoC,aAAOP,eAAe,CAACC,KAAD,EAAQC,MAAR,CAAtB;;AACpC,SAAKR,WAAW,CAACc,mBAAjB;AAAsC,aAAOL,iBAAiB,CAACF,KAAD,EAAQC,MAAR,CAAxB;;AACtC,SAAKR,WAAW,CAACe,cAAjB;AAAiC,aAAOL,YAAY,CAACH,KAAD,EAAQC,MAAR,CAAnB;;AACjC,SAAKR,WAAW,CAACgB,gBAAjB;AAAmC,aAAOL,cAAc,CAACJ,KAAD,EAAQC,MAAR,CAArB;;AACnC;AAAS,aAAOD,KAAP;AALb;AAQH,CATD;;AAWA,eAAeJ,KAAf","sourcesContent":["import * as actionTypes from '../actionTypes';\r\nimport {updateObject} from '../../utility';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    user: {},\r\n    loading: false\r\n}\r\n\r\nconst fetchUsersStart = (state, action) => updateObject(state, {loading: true});\r\n\r\nconst fetchUsersSuccess = (state, action) => updateObject(state, {\r\n    users: action.users,\r\n    loading:false\r\n})\r\n\r\nconst newUserStart = (state, action) => updateObject(state, {loading: true});\r\nconst newUserSuccess = (state, action) => updateObject(state, {\r\n    loading: false\r\n})\r\n\r\nconst users = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_USERS_START: return fetchUsersStart(state, action);\r\n        case actionTypes.FETCH_USERS_SUCCESS: return fetchUsersSuccess(state, action);\r\n        case actionTypes.NEW_USER_START: return newUserStart(state, action);\r\n        case actionTypes.NEW_USER_SUCCESS: return newUserSuccess(state, action);\r\n        default: return state;\r\n\r\n    }\r\n}\r\n\r\nexport default users;"]},"metadata":{},"sourceType":"module"}