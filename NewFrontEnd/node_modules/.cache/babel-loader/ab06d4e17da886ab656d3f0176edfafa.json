{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanma\\\\Desktop\\\\AUT\\\\INFS803\\\\Project\\\\Cloud-Computing\\\\NewFrontEnd\\\\src\\\\pages\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport * as actions from '../store/users/index';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport api from '../api/api';\nimport { Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const dispatcher = useDispatch();\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const antIcon = /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n    style: {\n      fontSize: 24\n    },\n    spin: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 19\n  }, this);\n\n  const {\n    load,\n    usrs,\n    logUser,\n    usr\n  } = useSelector(_ref => {\n    let {\n      users\n    } = _ref;\n    return {\n      load: users.loading,\n      usrs: users.users,\n      usr: users.user,\n      logUser: users.userLogged\n    };\n  }, shallowEqual);\n  useEffect(() => {\n    dispatcher(actions.fetchUsers());\n  }, []);\n\n  const handleSubmit = async data => {\n    data.preventDefault();\n    const toSend = {\n      username: userName,\n      password: password\n    };\n\n    try {\n      console.log(usrs);\n      let userId = 0;\n\n      for (const key in usrs) {\n        if (usrs[key].username === userName && usrs[key].password === password) {\n          userId = usrs[key].user_id;\n        }\n      }\n\n      await dispatcher(actions.loginUser(userId));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const registerClick = async () => {\n    await dispatcher(actions.fetchUsers());\n    navigate(\"/register\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \"CC12 Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Spin, {\n        indicator: antIcon,\n        spinning: load\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username/Email\",\n          onChange: e => {\n            setUserName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => registerClick(),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"kWslhmNq51q36zKbOklNxLXwK1Y=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/tanma/Desktop/AUT/INFS803/Project/Cloud-Computing/NewFrontEnd/src/pages/Login.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","shallowEqual","useNavigate","actions","LoadingOutlined","api","Spin","Login","dispatcher","navigate","userName","setUserName","password","setPassword","antIcon","fontSize","load","usrs","logUser","usr","users","loading","user","userLogged","fetchUsers","handleSubmit","data","preventDefault","toSend","username","console","log","userId","key","user_id","loginUser","err","error","message","registerClick","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as actions from '../store/users/index';\r\n\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport api from '../api/api';\r\nimport { Spin } from 'antd';\r\n\r\n\r\nconst Login = () => {\r\n  const dispatcher = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [userName, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n\r\n  const {load, usrs, logUser, usr} = useSelector(({users}) => ({\r\n    load: users.loading,\r\n    usrs: users.users,\r\n    usr: users.user,\r\n    logUser: users.userLogged\r\n  }), shallowEqual);\r\n\r\n  useEffect(() => {\r\n    dispatcher(actions.fetchUsers())\r\n }, [])\r\n\r\n\r\n\r\n  const handleSubmit = async(data) => {\r\n    data.preventDefault();\r\n\r\n    const toSend  = {\r\n      username: userName,\r\n      password: password\r\n    }\r\n\r\n    try {\r\n\r\n      console.log(usrs)\r\n      let userId = 0;\r\n\r\n      for (const key in usrs) {\r\n        if (usrs[key].username === userName && usrs[key].password === password){\r\n          userId = usrs[key].user_id\r\n        }\r\n      }\r\n      await dispatcher(actions.loginUser(userId))\r\n    } catch (err) {\r\n      console.error(err.message)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const registerClick = async() => {\r\n    await dispatcher(actions.fetchUsers())\r\n    navigate(\"/register\")\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='formContainer'>\r\n        <div className='formWrapper'>\r\n            <span className=\"logo\">CC12 Chat</span>\r\n            <span className=\"title\">Login</span>\r\n            <Spin indicator={antIcon} spinning={load}/>\r\n            <form onSubmit = {handleSubmit}>\r\n                <input type=\"text\" placeholder='Username/Email' onChange = {(e) => {setUserName(e.target.value)}}/>\r\n                <input type=\"password\" placeholder='Password' onChange={(e) => {setPassword(e.target.value)}}/>\r\n\r\n                <button>Login</button>\r\n            </form>\r\n            <p>Don't have an account? <button onClick={() => registerClick()}>Register</button></p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}