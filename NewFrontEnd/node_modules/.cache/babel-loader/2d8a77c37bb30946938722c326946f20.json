{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanma\\\\Desktop\\\\AUT\\\\INFS803\\\\Project\\\\Cloud-Computing\\\\NewFrontEnd\\\\src\\\\pages\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport * as actions from '../store/users/index';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const dispatcher = useDispatch();\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const antIcon = /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n    style: {\n      fontSize: 24\n    },\n    spin: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 19\n  }, this);\n\n  useEffect(() => {\n    dispatcher(actions.fetchUsers());\n  }, []);\n  const {\n    load,\n    usrs\n  } = useSelector(_ref => {\n    let {\n      users\n    } = _ref;\n    return {\n      load: users.loading,\n      usrs: users.users\n    };\n  }, shallowEqual);\n\n  const handleSubmit = async data => {\n    data.preventDefault();\n    const toSend = {\n      username: userName,\n      password: password\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \"CC12 Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Spin, {\n        indicator: antIcon,\n        spinning: load\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Username/Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/register\"),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Rh+8JnslPxgC+RMWfc3YvAhKTJ4=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/tanma/Desktop/AUT/INFS803/Project/Cloud-Computing/NewFrontEnd/src/pages/Login.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","shallowEqual","useNavigate","actions","LoadingOutlined","Spin","Login","dispatcher","navigate","userName","setUserName","password","setPassword","antIcon","fontSize","fetchUsers","load","usrs","users","loading","handleSubmit","data","preventDefault","toSend","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,YAAlC,QAAqD,aAArD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,IAAT,QAAqB,MAArB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,UAAU,GAAGR,WAAW,EAA9B;AACA,QAAMS,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMgB,OAAO,gBAAG,QAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAxB;AAA0C,IAAA,IAAI;AAA9C;AAAA;AAAA;AAAA;AAAA,UAAhB;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACbS,IAAAA,UAAU,CAACJ,OAAO,CAACY,UAAR,EAAD,CAAV;AACF,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAejB,WAAW,CAAC;AAAA,QAAC;AAACkB,MAAAA;AAAD,KAAD;AAAA,WAAc;AAC7CF,MAAAA,IAAI,EAAEE,KAAK,CAACC,OADiC;AAE7CF,MAAAA,IAAI,EAAEC,KAAK,CAACA;AAFiC,KAAd;AAAA,GAAD,EAG5BjB,YAH4B,CAAhC;;AAKA,QAAMmB,YAAY,GAAG,MAAMC,IAAN,IAAe;AAClCA,IAAAA,IAAI,CAACC,cAAL;AAEA,UAAMC,MAAM,GAAI;AACdC,MAAAA,QAAQ,EAAEf,QADI;AAEdE,MAAAA,QAAQ,EAAEA;AAFI,KAAhB;AAMD,GATD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEE,OAAjB;AAA0B,QAAA,QAAQ,EAAEG;AAApC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAM,QAAA,QAAQ,EAAII,YAAlB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,WAAW,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,WAAW,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI;AAAA,2DAA0B;AAAQ,UAAA,OAAO,EAAE,MAAMZ,QAAQ,CAAC,WAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA9CD;;GAAMF,K;UACeP,W,EACFG,W,EAWIF,W;;;KAbjBM,K;AAgDN,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as actions from '../store/users/index';\r\n\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { Spin } from 'antd';\r\n\r\n\r\nconst Login = () => {\r\n  const dispatcher = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [userName, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n  useEffect(() => {\r\n     dispatcher(actions.fetchUsers())\r\n  }, [])\r\n\r\n  const {load, usrs} = useSelector(({users}) => ({\r\n    load: users.loading,\r\n    usrs: users.users\r\n  }), shallowEqual);\r\n\r\n  const handleSubmit = async(data) => {\r\n    data.preventDefault();\r\n\r\n    const toSend  = {\r\n      username: userName,\r\n      password: password\r\n    }\r\n\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <div className='formContainer'>\r\n        <div className='formWrapper'>\r\n            <span className=\"logo\">CC12 Chat</span>\r\n            <span className=\"title\">Login</span>\r\n            <Spin indicator={antIcon} spinning={load}/>\r\n            <form onSubmit = {handleSubmit}>\r\n                <input type=\"email\" placeholder='Username/Email'/>\r\n                <input type=\"password\" placeholder='Password'/>\r\n\r\n                <button>Login</button>\r\n            </form>\r\n            <p>Don't have an account? <button onClick={() => navigate(\"/register\")}>Register</button></p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}